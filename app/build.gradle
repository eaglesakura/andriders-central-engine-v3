// バージョン名
// ${メジャーバージョン}.${機能バージョン}.${ビルド番号}
// 3.0.x  : モジュール細分化バージョン
def ACES_APP_VERSION = "3.0"
def ACES_SDK_VERSION = "3.0.+"

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://dl.bintray.com/eaglesakura/maven/" }
    }
    dependencies {
        classpath "com.eaglesakura:plugin-ci-support:1.2.200"
    }
}
apply plugin: 'com.android.application'
apply plugin: 'com.eaglesakura.ci-support'
apply plugin: 'me.tatarka.retrolambda' /* Android Lambda */

configurations {
    all*.exclude group: "com.google.code.findbugs", module: "jsr305"
    all*.exclude group: "org.apache.httpcomponents", module: "httpclient"
}

dependencies {
    testCompile 'org.khronos:opengl-api:gl1.1-android-2.1_r1'
    if (EGLIBRARY_COMPILE_LOCAL) {
        compile project(':eglibrary:sloth-framework')
        compile project(":eglibrary:android-gms")
        compile project(":eglibrary:android-firebase")
        compile project(':eglibrary:android-bluetooth')
        compile project(':eglibrary:greendao-wrapper')

        /**
         * UnitTest
         */
        androidTestCompile project(":eglibrary:android-devicetest-support")
        testCompile project(":eglibrary:android-unittest-support")
    } else {
        compile 'com.eaglesakura:sloth-framework:3.25.0.12'
        compile 'com.eaglesakura:android-bluetooth:1.1.452'
        compile 'com.eaglesakura:android-gms:1.10.1.108'
        compile 'com.eaglesakura:android-firebase:1.10.1.134'
        compile 'com.eaglesakura:greendao-wrapper:2.2.459'

        /**
         * UnitTest
         */
        androidTestCompile("com.eaglesakura:android-devicetest-support:2.1.273") {
            exclude(group: "com.eaglesakura", module: "java-commons")
            exclude(group: "com.eaglesakura", module: "android-commons")
            exclude(group: "com.android.support")
        }
        testCompile('com.eaglesakura:android-unittest-support:1.4.208') {
            exclude(group: "com.eaglesakura", module: "java-commons")
            exclude(group: "com.eaglesakura", module: "android-commons")
            exclude(group: "com.android.support")
        }
    }


    if (ACESDK_COMPILE_LOCAL) {
        compile project(':sdk')
    } else {
        compile "com.eaglesakura:andriders-central-engine-sdk:${ACES_SDK_VERSION}"
    }

    /**
     * support libs
     */
    compile "com.android.support:support-v4:${ANDROID_SUPPORT_LIB_VERSION}"
    compile "com.android.support:appcompat-v7:${ANDROID_SUPPORT_LIB_VERSION}"
    compile "com.android.support:cardview-v7:${ANDROID_SUPPORT_LIB_VERSION}"
    compile "com.android.support:recyclerview-v7:${ANDROID_SUPPORT_LIB_VERSION}"
    compile "com.android.support:palette-v7:${ANDROID_SUPPORT_LIB_VERSION}"
    compile "com.android.support:design:${ANDROID_SUPPORT_LIB_VERSION}"
    compile "com.android.support:support-vector-drawable:${ANDROID_SUPPORT_LIB_VERSION}"
    /**
     * Play Service
     */
    compile "com.google.android.gms:play-services-fitness:${ANDROID_PLAYSERVICE_LIB_VERSION}"
    compile "com.google.android.gms:play-services-location:${ANDROID_PLAYSERVICE_LIB_VERSION}"
    compile "com.google.android.gms:play-services-maps:${ANDROID_PLAYSERVICE_LIB_VERSION}"
    compile "com.google.android.gms:play-services-auth:${ANDROID_PLAYSERVICE_LIB_VERSION}"

    /**
     * Firebase
     */
    compile "com.google.firebase:firebase-core:${ANDROID_PLAYSERVICE_LIB_VERSION}"
    compile "com.google.firebase:firebase-auth:${ANDROID_PLAYSERVICE_LIB_VERSION}"
    compile "com.google.firebase:firebase-config:${ANDROID_PLAYSERVICE_LIB_VERSION}"
    compile "com.google.firebase:firebase-database:${ANDROID_PLAYSERVICE_LIB_VERSION}"
    compile "com.android.support:support-annotations:${ANDROID_PLAYSERVICE_LIB_VERSION}"
    // Firebase Crashはリリース時のみで良い
    releaseCompile "com.google.firebase:firebase-crash:${ANDROID_PLAYSERVICE_LIB_VERSION}"

    // UI Library
    compile 'com.edmodo:rangebar:1.0.0' // Zone Setting

    /**
     * Smooth ProgressBar
     * https://github.com/castorflex/SmoothProgressBar
     */
    compile 'com.github.castorflex.smoothprogressbar:library:1.1.0'

    // Remote Debug
    debugCompile 'com.deploygate:sdk:3.1'

    // SQLite JSON
    androidTestCompile 'com.eaglesakura:android-sqliteX:3.16.1.8'
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_7
    }

    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId "com.eaglesakura.andriders.v3"
        minSdkVersion 21
        targetSdkVersion 25

//        versionCode 99999;
        versionCode eglibrary.ci.buildVersionCode as int
        versionName "${ACES_APP_VERSION}${getArtifactVersionSuffix()}"
        vectorDrawables.useSupportLibrary = true        // using vector drawable

        // add BuildConfig
        buildConfigField "String", "BUILD_DATE", "\"${eglibrary.ci.buildDate}\""

        // 日本語と英語リソースのみを残す
        resConfigs "en", "ja"

        manifestPlaceholders = [google_api_key: "@string/google_api_key"]

        // Device Test
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"    // JUnit4
    }

    sourceSets {
        main {
            java.srcDirs += [
                    'src/main/gen/java',
                    // 内蔵プラグイン
                    'src/main/plugin',
            ]
            res.srcDirs += [
                    "private/main/res"
            ];
        }
    }

    dexOptions {
        // memo: http://developer.covelline.com/2015/06/circle-ci/
        javaMaxHeapSize eglibrary.ci.ciRunning ? "2g" : "4g"
        preDexLibraries !eglibrary.ci.ciRunning
    }

    testOptions {
        unitTests.all {
            if (eglibrary.ci.ciRunning) {
                jvmArgs '-Xms256m', '-Xmx2048m', '-XX:MaxPermSize=128m', '-XX:+HeapDumpOnOutOfMemoryError'
            }
        }
    }
    // 署名設定
    signingConfigs {
        debug {
            storeFile DEBUG_KEYSTORE_FILE_PATH
            storePassword DEBUG_KEYSTORE_PASS
            keyAlias DEBUG_KEYSTORE_ALIAS_NAME
            keyPassword DEBUG_KEYSTORE_ALIAS_PASS
        }

        release {
            storeFile RELEASE_KEYSTORE_FILE_PATH
            storePassword RELEASE_KEYSTORE_PASS
            keyAlias RELEASE_KEYSTORE_ALIAS_NAME
            keyPassword RELEASE_KEYSTORE_ALIAS_PASS
        }
    }

    buildTypes {
        debug {
            // Pluginとの連携やデバッグを楽にするため、Package名は共通にする
//            applicationIdSuffix ".debug"
            versionNameSuffix ".debug"    // バージョン名にデバッグフラグを付与する
            signingConfig signingConfigs.debug
        }

        release {
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
        // for googleplay release
        develop {
            minSdkVersion 21
            applicationId "org.andriders.ace"
        }
        // for googleplay release
        googleplay {
            applicationId "org.andriders.ace"
        }
    }

    lintOptions {
        disable "DuplicateIds"
        disable "NewApi"
        disable "InvalidPackage"
        disable "ProtectedPermissions"
        disable "ResourceType"
//        abortOnError false
    }

    // ignore include
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/rxjava.properties'
        exclude "**/**annotations.gwt.xml"
        exclude "**/**-setter_store.bin"
        exclude "**/**-layoutinfo.bin"
        exclude "**/**-br.bin"
    }
}

/**
 * UnitTest & retro lambda
 */
tasks.withType(Test) {
    project.tasks
            .findAll {
        task -> (task.name ==~ /compile.*?TestJava.*?/)
    }
    .each { task ->
        task.doFirst {
            sourceCompatibility = JavaVersion.VERSION_1_8
            targetCompatibility = JavaVersion.VERSION_1_8
        }
    }
}

/**
 * バージョンを取得する
 * CircleCIの場合、バージョン末尾にビルド番号を付与する
 */
def getArtifactVersionSuffix() {
    if (System.env.CIRCLE_BUILD_NUM != null) {
        // CircleCIのバージョンが指定されているので、そちらを利用する
        return ".${System.env.CIRCLE_BUILD_NUM}"
    } else {
        return ".snapshot"
    }
}

apply from: "generator.gradle"

/**
 * Notifications
 */
apply plugin: 'com.mindera.gradle.slack'
apply plugin: 'com.github.ben-manes.versions'

slack {
    url System.getenv("ACE_SLACK_HOOK_URL");
    dependsOnTasks 'assembleGoogleplayDebug', 'assembleGoogleplayRelease', 'testGoogleplayDebugUnitTest', 'dependencyUpdates';
    title 'ACE v3';
    enabled = eglibrary.ci.ciRunning
//    enabled = true
    gitInfo = true
}

apply plugin: 'com.getkeepsafe.dexcount'
dexcount {
    format = "json"
    includeClasses = false
    includeFieldCount = true
    includeTotalMethodCount = true
    orderByMethodCount = true
    verbose = false
}

// Apply Google Play Service Data
apply plugin: 'com.google.gms.google-services'
